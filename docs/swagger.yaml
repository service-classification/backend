basePath: /
definitions:
  handlers.NewService:
    properties:
      parameters:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - parameters
    - title
    type: object
  handlers.assignGroupRequest:
    properties:
      group_id:
        type: integer
    type: object
  models.Group:
    properties:
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Parameter:
    properties:
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Service:
    properties:
      approved_at:
        type: string
      created_at:
        type: string
      group:
        $ref: '#/definitions/models.Group'
      group_id:
        type: integer
      id:
        type: integer
      parameters:
        items:
          $ref: '#/definitions/models.Parameter'
        type: array
      title:
        type: string
    type: object
  services.GroupView:
    properties:
      allowed_parameters:
        example:
        - mob_inet
        - fix_ctv
        - voice_fix
        items:
          type: string
        type: array
      id:
        example: 3042
        type: integer
      title:
        type: string
    type: object
  services.ParameterView:
    properties:
      allowed_classes:
        example:
        - "1"
        - "1033"
        - "3023"
        items:
          type: string
        type: array
      id:
        example: fix_ctv
        type: string
      title:
        type: string
    type: object
host: 194.135.25.202:8080
info:
  contact: {}
  description: This is a backend server.
  title: MyApp API
  version: "1.0"
paths:
  /groups:
    get:
      consumes:
      - application/json
      description: Retrieves a list of groups with pagination.
      parameters:
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Group'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List groups with pagination
      tags:
      - Groups
    post:
      consumes:
      - application/json
      description: Creates a new group with the provided details.
      parameters:
      - description: Group details
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/services.GroupView'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Group'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new group
      tags:
      - Groups
  /groups/{id}:
    delete:
      description: Deletes a group by its ID. If the group is used in any services,
        it returns an error.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Group deleted successfully
        "400":
          description: Group is used in services
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a group
      tags:
      - Groups
    get:
      consumes:
      - application/json
      description: Retrieves a group by its ID.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.GroupView'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a group by ID
      tags:
      - Groups
    put:
      consumes:
      - application/json
      description: Updates the details of an existing group.
      parameters:
      - description: Group ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group details
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/services.GroupView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Group'
        "400":
          description: Invalid input or group is used in services
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing group
      tags:
      - Groups
  /parameters:
    get:
      description: Retrieves a list of parameters with pagination.
      parameters:
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Parameter'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List parameters with pagination
      tags:
      - Parameters
    post:
      consumes:
      - application/json
      description: Creates a new parameter with the provided details.
      parameters:
      - description: Parameter details
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/services.ParameterView'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Parameter'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new parameter
      tags:
      - Parameters
  /parameters/{id}:
    delete:
      description: Deletes a parameter by its ID. If the parameter is used in any
        services, it returns an error.
      parameters:
      - description: Parameter ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: Parameter deleted successfully
        "400":
          description: Parameter is used in services
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a parameter
      tags:
      - Parameters
    get:
      description: Retrieves a parameter by its ID.
      parameters:
      - description: Parameter ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.ParameterView'
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a parameter by ID
      tags:
      - Parameters
    put:
      consumes:
      - application/json
      description: Updates an existing parameter with the provided details.
      parameters:
      - description: Parameter ID
        in: path
        name: id
        required: true
        type: string
      - description: Parameter details
        in: body
        name: parameter
        required: true
        schema:
          $ref: '#/definitions/services.ParameterView'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Parameter'
        "400":
          description: Invalid input or parameter is used in services
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing parameter
      tags:
      - Parameters
  /report:
    get:
      description: Generates a fiscal report in PDF format and returns it as a downloadable
        file.
      produces:
      - application/pdf
      responses:
        "200":
          description: OK
          schema:
            type: file
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Build fiscal report
      tags:
      - Reports
  /services:
    get:
      description: Fetches a list of services with pagination.
      parameters:
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Service'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all services
      tags:
      - Services
    post:
      consumes:
      - application/json
      description: Creates a new service with the provided details.
      parameters:
      - description: Service details
        in: body
        name: service
        required: true
        schema:
          $ref: '#/definitions/handlers.NewService'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Service'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new service
      tags:
      - Services
  /services/{id}:
    get:
      description: Fetches the details of a service by its ID.
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Service'
        "404":
          description: Service not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a service by ID
      tags:
      - Services
  /services/{id}/approve:
    post:
      consumes:
      - application/json
      description: Approves a service by its ID. If a group ID is provided in the
        request body, it assigns the group to the service before approval.
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: integer
      - description: Group ID
        in: body
        name: group
        required: true
        schema:
          $ref: '#/definitions/handlers.assignGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Service'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service or group not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Approve a service
      tags:
      - Services
  /services/{id}/proposed_groups:
    get:
      description: Fetches a list of proposed groups for a service based on similar
        parameters.
      parameters:
      - description: Service ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Group'
            type: array
        "400":
          description: Invalid service ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Service not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List proposed groups for a service
      tags:
      - Services
schemes:
- http
swagger: "2.0"
